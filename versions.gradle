ext.deps = [:]

def versions = [:]
versions.appcompat = "1.1.0-rc01"
versions.recyclerview = "1.0.0"
versions.support = "27.1.0"
versions.cardview = "1.0.0"
versions.retrofit = "2.3.0"
versions.fragment = "1.2.0"
versions.material = "1.0.0"
versions.lifecycle = "2.2.0"
versions.android_gradle_plugin = '3.6.2'
versions.annotations = "1.0.0"
versions.constraint_layout = "2.0.0-alpha2"
versions.dagger = "2.16"
versions.material = "1.2.0-alpha01"
versions.mockito = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.mockwebserver = "3.8.1"
versions.okhttp_logging_interceptor = "3.9.0"
versions.rx_android = "2.0.1"
versions.rxjava2 = "2.1.3"
versions.picasso = "2.71828"
versions.multidex = "1.0.3"
versions.room = "2.2.3"

ext.versions = versions

def build_versions = [:]
build_versions.min_sdk = 16
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def deps = [:]

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.annotations = "androidx.annotation:annotation:$versions.annotations"
deps.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
deps.cardview = "androidx.cardview:cardview:$versions.cardview"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"
deps.material = "com.google.android.material:material:$versions.material"
deps.picasso = "com.squareup.picasso:picasso:$versions.picasso"
deps.multidex = "com.android.support:multidex:$versions.multidex"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.android_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger


def fragment = [:]
fragment.runtime = "androidx.fragment:fragment:${versions.fragment}"
deps.fragment = fragment

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

deps.material = "com.google.android.material:material:$versions.material"

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"

deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.adapter = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit

deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"

deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

ext.deps = deps


def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}
ext.addRepos = this.&addRepos